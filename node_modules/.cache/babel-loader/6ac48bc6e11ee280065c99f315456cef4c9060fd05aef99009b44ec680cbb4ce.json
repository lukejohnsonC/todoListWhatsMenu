{"ast":null,"code":"var _jsxFileName = \"C:\\\\whatsMenu\\\\todolist\\\\src\\\\components\\\\ToDo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ToDo && ToDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: index.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Finalizado / Incompleto\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Editar\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Deletar\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","toDo","markDone","setUpdateData","deleteTask","children","sort","a","b","id","map","task","index","className","status","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","e","icon","_c","$RefreshReg$"],"sources":["C:/whatsMenu/todolist/src/components/ToDo.jsx"],"sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\r\n    return(\r\n        <>\r\n            {ToDo && ToDo\r\n                .sort((a,b) => a.id > b.id ? 1:-1)\r\n                .map( (task, index) => {\r\n                    return(\r\n                        <React.Fragment key={task.id}>\r\n\r\n                        <div className=\"col taskBg\">\r\n                            \r\n                            <div className={task.status ? 'done' : ''}>\r\n                            <span className=\"taskNumber\">{index + 1}</span>\r\n                            <span className=\"taskText\">{index.title}</span>\r\n                            </div>\r\n\r\n                            <div className=\"iconsWrap\">\r\n                            \r\n                            <span title=\"Finalizado / Incompleto\"\r\n                                onClick={ (e) => markDone(task.id)}\r\n                            ><FontAwesomeIcon icon={faCircleCheck}/></span>\r\n\r\n                            {task.status ? null : (\r\n                                <span title=\"Editar\"\r\n                                onClick={ ()=> setUpdateData({\r\n                                id: task.id,\r\n                                title: task.title,\r\n                                status: task.status ? true : false\r\n                                })}\r\n                                ><FontAwesomeIcon icon={faPen}/></span>\r\n                            )}\r\n                            \r\n\r\n                            <span title=\"Deletar\"\r\n                            onClick={()=> deleteTask(task.id)}                  \r\n                            ><FontAwesomeIcon icon={faTrashCan}/></span>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                )        \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}