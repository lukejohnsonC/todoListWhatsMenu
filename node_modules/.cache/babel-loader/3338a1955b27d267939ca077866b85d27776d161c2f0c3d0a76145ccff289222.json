{"ast":null,"code":"var _jsxFileName = \"C:\\\\whatsMenu\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Tarefas estrutura\n  const [ToDo, setToDo] = useState([{\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"status\": false\n  }, {\n    \"id\": 2,\n    \"title\": \"Task 2\",\n    \"status\": false\n  }]);\n\n  //State temporario\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Adicionar uma tarefa\n  const addTask = () => {};\n\n  //Deletar uma tarefa\n  const deleteTask = id => {};\n\n  //Marcar tarefa como feito\n  const markDone = id => {};\n\n  //Cancelar alteração\n  const cancelUpdate = id => {};\n\n  //Alterar tarefa\n  const changeTask = e => {};\n\n  //Atualizar tarefa\n  const updateTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-do List WhatsMenu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), ToDo && ToDo.length ? '' : 'Nenhuma tarefa adicionada', ToDo && ToDo.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {}, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KSChxKsCFCl7wdwNdFtnRn5Js+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","App","_s","ToDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","deleteTask","id","markDone","cancelUpdate","changeTask","e","updateTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","index","Fragment","_c","$RefreshReg$"],"sources":["C:/whatsMenu/todolist/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\n\nfunction App() {\n\n  //Tarefas estrutura\n  const [ToDo, setToDo] = useState([\n    {\"id\": 1, \"title\": \"Task 1\", \"status\": false},\n    {\"id\": 2, \"title\": \"Task 2\", \"status\": false},\n  ])\n\n  //State temporario\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Adicionar uma tarefa\n  const addTask = () => {\n\n  }\n\n  //Deletar uma tarefa\n  const deleteTask = (id) => {\n\n  }\n\n  //Marcar tarefa como feito\n  const markDone = (id) => {\n\n  }\n\n  //Cancelar alteração\n  const cancelUpdate = (id) => {\n    \n  }\n\n  //Alterar tarefa\n  const changeTask = (e) => {\n    \n  }\n\n  //Atualizar tarefa\n  const updateTask = () => {\n    \n  }\n\n\n\n\n  return (\n    <div className=\"container App\">\n\n      <h2>To-do List WhatsMenu</h2>\n\n      {ToDo && ToDo.length ? '' : 'Nenhuma tarefa adicionada'}\n\n      {ToDo && ToDo\n        .map( (task, index) => {\n          return(\n            <React.Fragment key={task.id}></React.Fragment>\n          )\n        } )        \n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,sCAAsC;AAC7C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,EAAEC,KAAK,EAAEC,UAAU,QAAQ,mCAAmC;AACpF,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAC/B;IAAC,IAAI,EAAE,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE;EAAK,CAAC,EAC7C;IAAC,IAAI,EAAE,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,QAAQ,EAAE;EAAK,CAAC,CAC9C,CAAC;;EAEF;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMe,OAAO,GAAGA,CAAA,KAAM,CAEtB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,EAAE,IAAK,CAE3B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAID,EAAE,IAAK,CAEzB,CAAC;;EAED;EACA,MAAME,YAAY,GAAIF,EAAE,IAAK,CAE7B,CAAC;;EAED;EACA,MAAMG,UAAU,GAAIC,CAAC,IAAK,CAE1B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;EAKD,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5BlB,OAAA;MAAAkB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE5BnB,IAAI,IAAIA,IAAI,CAACoB,MAAM,GAAG,EAAE,GAAG,2BAA2B,EAEtDpB,IAAI,IAAIA,IAAI,CACVqB,GAAG,CAAE,CAACC,IAAI,EAAEC,KAAK,KAAK;MACrB,oBACE1B,OAAA,CAACP,KAAK,CAACkC,QAAQ,MAAMF,IAAI,CAACd,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC;IAEnD,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGF,CAAC;AAEV;AAACpB,EAAA,CA9DQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}