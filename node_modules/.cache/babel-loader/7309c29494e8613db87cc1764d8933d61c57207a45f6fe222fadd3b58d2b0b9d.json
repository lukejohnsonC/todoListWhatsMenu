{"ast":null,"code":"var _jsxFileName = \"C:\\\\whatsMenu\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Tarefas estrutura\n  const [ToDo, setToDo] = useState([{\n    \"id\": 1,\n    \"title\": \"Task 1\",\n    \"status\": false\n  }, {\n    \"id\": 2,\n    \"title\": \"Task 2\",\n    \"status\": false\n  }]);\n\n  //State temporario\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Adicionar uma tarefa\n  const addTask = () => {\n    if (newTask) {\n      let num = ToDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...ToDo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  //Deletar uma tarefa\n  const deleteTask = id => {\n    let newTasks = ToDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  //Marcar tarefa como feito\n  const markDone = id => {\n    let newTask = ToDo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  //Cancelar alteração\n  const cancelUpdate = id => {\n    setUpdateData('');\n  };\n\n  //Alterar tarefa\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateDate(newEntry);\n  };\n\n  //Atualizar tarefa\n  const updateTask = () => {\n    let filterRecords = [...ToDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-do List WhatsMenu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: updateData && updateData.title,\n          onChange: e => changeTask(e),\n          className: \"form-control form-control-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateTask,\n          className: \"btn btn-lg btn-success mr-20\",\n          children: \"Atualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-warming\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newTask,\n          onChange: e => setNewTask(e.target.value),\n          className: \"form-control form-control-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          className: \"btn btn-lg btn-success\",\n          children: \"Adicionar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), ToDo && ToDo.length ? '' : 'Nenhuma tarefa adicionada', ToDo && ToDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: index.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Finalizado / Incompleto\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Editar\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Deletar\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KSChxKsCFCl7wdwNdFtnRn5Js+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","App","_s","ToDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","id","title","status","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","setUpdateDate","updateTask","filterRecords","updatedObject","updated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","sort","a","b","index","Fragment","icon","_c","$RefreshReg$"],"sources":["C:/whatsMenu/todolist/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\n\nfunction App() {\n\n  //Tarefas estrutura\n  const [ToDo, setToDo] = useState([\n    {\"id\": 1, \"title\": \"Task 1\", \"status\": false},\n    {\"id\": 2, \"title\": \"Task 2\", \"status\": false},\n  ])\n\n  //State temporario\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Adicionar uma tarefa\n  const addTask = () => {\n    if(newTask) {\n      let num = ToDo.length +1;\n      let newEntry = { id: num, title: newTask, status: false }\n      setToDo([...ToDo, newEntry])\n      setNewTask('');\n    }\n  }\n\n  //Deletar uma tarefa\n  const deleteTask = (id) => {\n    let newTasks = ToDo.filter( task => task.id !== id)\n    setToDo(newTasks);\n  }\n\n  //Marcar tarefa como feito\n  const markDone = (id) => {\n    let newTask = ToDo.map( task => {\n      if (task.id === id) {\n        return ({...task, status: !task.status})\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  //Cancelar alteração\n  const cancelUpdate = (id) => {\n    setUpdateData('');\n  }\n\n  //Alterar tarefa\n  const changeTask = (e) => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    }\n    setUpdateDate(newEntry);\n  }\n\n  //Atualizar tarefa\n  const updateTask = () => {\n    let filterRecords = [...ToDo].filter( task => task.id !== updateData.id );\n    let updatedObject = [...filterRecords, updateData]\n    setToDo(updated)\n  }\n\n\n\n\n  return (\n    <div className=\"container App\">\n\n      <h2>To-do List WhatsMenu</h2>\n\n      {/* Atualizar Tarefa */}\n      <div className=\"row\">\n        <div className=\"col\">\n          <input\n            value={ updateData && updateData.title }\n            onChange={(e) => changeTask(e)}\n            className=\"form-control form-control-lg\" />\n        </div>\n\n        <div className=\"col-auto\">\n          <button\n            onClick={updateTask}\n            className=\"btn btn-lg btn-success mr-20\">Atualizar</button>\n          <button className=\"btn btn-lg btn-warming\">Cancelar</button>\n        </div>\n      </div>\n\n\n\n      {/* Adicionar Tarefa */}\n      <div className=\"row\">\n        <div className=\"col\">\n          <input value={newTask}\n          onChange={ (e) => setNewTask(e.target.value)}\n          \n          className=\"form-control form-control-lg\" />\n        </div>\n\n        <div className=\"col-auto\">\n          <button \n          onClick={addTask}\n          className=\"btn btn-lg btn-success\">Adicionar Tarefa</button>\n        </div>\n      </div>\n\n\n\n\n\n\n\n      {ToDo && ToDo.length ? '' : 'Nenhuma tarefa adicionada'}\n\n      {ToDo && ToDo\n        .sort((a,b) => a.id > b.id ? 1:-1)\n        .map( (task, index) => {\n          return(\n            <React.Fragment key={task.id}>\n\n              <div className=\"col taskBg\">\n                \n                <div className={task.status ? 'done' : ''}>\n                  <span className=\"taskNumber\">{index + 1}</span>\n                  <span className=\"taskText\">{index.title}</span>\n                </div>\n\n                <div className=\"iconsWrap\">\n                  \n                  <span title=\"Finalizado / Incompleto\"\n                    onClick={ (e) => markDone(task.id)}\n                  ><FontAwesomeIcon icon={faCircleCheck}/></span>\n\n                  {task.status ? null : (\n                    <span title=\"Editar\"\n                    onClick={ ()=> setUpdateData({\n                      id: task.id,\n                      title: task.title,\n                      status: task.status ? true : false\n                    })}\n                    ><FontAwesomeIcon icon={faPen}/></span>\n                  )}\n                  \n\n                  <span title=\"Deletar\"\n                  onClick={()=> deleteTask(task.id)}                  \n                  ><FontAwesomeIcon icon={faTrashCan}/></span>\n                </div>\n\n              </div>\n\n            </React.Fragment>\n          )\n        } )        \n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}