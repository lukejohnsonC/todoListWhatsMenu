{"ast":null,"code":"var _jsxFileName = \"C:\\\\whatsMenu\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport addTaskForm from './components/addTaskForm.jsx';\nimport updateForm from './components/updateForm.jsx';\nimport ToDo from './components/Todo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Estrutura das Tarefas\n  const [toDo, setToDo] = useState([{\n    \"id\": 1,\n    \"title\": \"task1\",\n    \"status\": false\n  }, {\n    \"id\": 2,\n    \"title\": \"task2\",\n    \"status\": false\n  }]);\n\n  //State temporario\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Adicionar uma tarefa\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...listTodo, newEntry]);\n      setNewTask('');\n    }\n  };\n\n  //Deletar uma tarefa\n  const deleteTask = id => {\n    let newTasks = listTodo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  };\n\n  //Marcar tarefa como feito\n  const markDone = id => {\n    let newTask = listTodo.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          status: !task.status\n        };\n      }\n      return task;\n    });\n    setToDo(newTask);\n  };\n\n  //Cancelar alteração\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  //Alterar tarefa no Atualizar\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  };\n\n  //Atualizar tarefa\n  const updateTask = () => {\n    let filterRecords = [...listTodo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To do List WhatsMenu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(\"updateForm\", {\n      updateData: updateData,\n      changeTask: changeTask,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"addTaskForm\", {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), listTodo && listTodo.length ? '' : 'Nenhuma tarefa adicionada', /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lRfSndPxg1Pmtzu2idBKnoWi+Cg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","addTaskForm","updateForm","ToDo","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","id","title","status","listTodo","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updatedObject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/whatsMenu/todolist/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nimport addTaskForm from './components/addTaskForm.jsx';\nimport updateForm from  './components/updateForm.jsx';\nimport ToDo from        './components/Todo.jsx';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n\n  //Estrutura das Tarefas\n  const [toDo, setToDo] = useState([\n    {\"id\": 1, \"title\": \"task1\", \"status\": false},\n    {\"id\": 2, \"title\": \"task2\", \"status\": false}\n  ])\n\n  //State temporario\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Adicionar uma tarefa\n  const addTask = () => {\n    if(newTask) {\n      let num = toDo.length +1;\n      let newEntry = { id: num, title: newTask, status: false }\n      setToDo([...listTodo, newEntry])\n      setNewTask('');\n    }\n  }\n\n  //Deletar uma tarefa\n  const deleteTask = (id) => {\n    let newTasks = listTodo.filter( task => task.id !== id)\n    setToDo(newTasks);\n  }\n\n  //Marcar tarefa como feito\n  const markDone = (id) => {\n    let newTask = listTodo.map( task => {\n      if (task.id === id) {\n        return ({...task, status: !task.status})\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n\n  //Cancelar alteração\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }\n\n  //Alterar tarefa no Atualizar\n  const changeTask = (e) => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    }\n    setUpdateData(newEntry);\n  }\n\n  //Atualizar tarefa\n  const updateTask = () => {\n    let filterRecords = [...listTodo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData]\n    setToDo(updatedObject);\n    setUpdateData('');\n  }\n\n  return (\n    <div className=\"container App\">\n\n      <h2>To do List WhatsMenu</h2>\n\n      {updateData && updateData ? (\n        \n        <updateForm\n          updateData    = {updateData}\n          changeTask    = {changeTask}\n          updateTask    = {updateTask}\n          cancelUpdate  = {cancelUpdate}\n        />\n\n      ) : (\n\n        <addTaskForm\n          newTask     = {newTask}\n          setNewTask  = {setNewTask}\n          addTask     = {addTask}\n        />\n\n      )}\n\n      {listTodo && listTodo.length ? '' : 'Nenhuma tarefa adicionada'}\n\n      <ToDo\n        toDo          = {toDo}\n        markDone      = {markDone}\n        setUpdateData = {setUpdateData}\n        deleteTask    = {deleteTask}\n      />\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}